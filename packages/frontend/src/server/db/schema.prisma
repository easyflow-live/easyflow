generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String?    @db.VarChar
  email      String     @unique @db.VarChar
  image      String?    @db.VarChar
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @default(now()) @db.Timestamptz(6)
  theme      String     @default("dark") @db.VarChar
  boards     boards[]
  sessions   sessions[]
}

model boards {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  owner_id   String   @db.Uuid
  name       String   @db.VarChar
  users      users    @relation(fields: [owner_id], references: [id])
}

model sessions {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String   @db.Uuid
  expires       DateTime @db.Timestamptz(6)
  session_token String   @db.VarChar
  access_token  String   @db.VarChar
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  updated_at    DateTime @default(now()) @db.Timestamptz(6)
  users         users    @relation(fields: [user_id], references: [id])
}

model verification_requests {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  identifier String   @db.VarChar
  token      String   @db.VarChar
  expires    DateTime @db.Timestamptz(6)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
}
